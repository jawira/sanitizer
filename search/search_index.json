{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"jawira/sanitizer List of sanitizers Sanitizer Works with Description Abs int , float Absolute value. Ascii string Remove all characters except ascii characters. AtLeast int , float Value is at least equal to provided number. AtMost int , float Value is at most equal to provided number. Capitalize string Converts the first letter of each word to uppercase and leaves the others as lowercase. Digits string Remove all characters except digits. EmptyStringToNull string Set null if value is empty string . FloatChars string Remove all characters except digits, +-. and optionally ,eE . IntegerChars string Remove all characters except digits, plus and minus sign. Lowercase string Make a string lowercase. Pad string Pad a string to a certain length with another string . Replace string Replace all occurrences of the search string with the replacement string . StripTags string Strip HTML and PHP tags from a string . Substring string Reduce the size of string to provided length. ToInt null , bool , float , string , array Cast to integer . ToString null , bool , int , float , array Cast to string . Trim string Strip whitespace (or other characters) from the beginning and end of a string . Uppercase string Make a string uppercase.","title":"jawira/sanitizer"},{"location":"index.html#jawirasanitizer","text":"","title":"jawira/sanitizer"},{"location":"index.html#list-of-sanitizers","text":"Sanitizer Works with Description Abs int , float Absolute value. Ascii string Remove all characters except ascii characters. AtLeast int , float Value is at least equal to provided number. AtMost int , float Value is at most equal to provided number. Capitalize string Converts the first letter of each word to uppercase and leaves the others as lowercase. Digits string Remove all characters except digits. EmptyStringToNull string Set null if value is empty string . FloatChars string Remove all characters except digits, +-. and optionally ,eE . IntegerChars string Remove all characters except digits, plus and minus sign. Lowercase string Make a string lowercase. Pad string Pad a string to a certain length with another string . Replace string Replace all occurrences of the search string with the replacement string . StripTags string Strip HTML and PHP tags from a string . Substring string Reduce the size of string to provided length. ToInt null , bool , float , string , array Cast to integer . ToString null , bool , int , float , array Cast to string . Trim string Strip whitespace (or other characters) from the beginning and end of a string . Uppercase string Make a string uppercase.","title":"List of sanitizers"},{"location":"Numbers/Abs.html","text":"Abs Abs - Absolute value. Abs only works with int and float , any other type is ignored. Basic usage use Jawira\\Sanitizer\\Filters as Sanitizer; class Travel { #[Sanitizer\\Abs] public int $km; } Parameters No parameters. Examples Absolute value: use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Abs] public int|float $age; } 10 \u2192 10 -5 \u2192 5 3.14 \u2192 3.14 -1.5 \u2192 1.5 See also XXX - xxxxxxxxxxxxxxxxxxxxxx.","title":"Abs"},{"location":"Numbers/Abs.html#abs","text":"Abs - Absolute value. Abs only works with int and float , any other type is ignored.","title":"Abs"},{"location":"Numbers/Abs.html#basic-usage","text":"use Jawira\\Sanitizer\\Filters as Sanitizer; class Travel { #[Sanitizer\\Abs] public int $km; }","title":"Basic usage"},{"location":"Numbers/Abs.html#parameters","text":"No parameters.","title":"Parameters"},{"location":"Numbers/Abs.html#examples","text":"Absolute value: use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Abs] public int|float $age; } 10 \u2192 10 -5 \u2192 5 3.14 \u2192 3.14 -1.5 \u2192 1.5","title":"Examples"},{"location":"Numbers/Abs.html#see-also","text":"XXX - xxxxxxxxxxxxxxxxxxxxxx.","title":"See also"},{"location":"Strings/Pad.html","text":"Pad Pad - Pad a string to a certain length with another string. Pad only works with string , any other type is ignored. Basic usage use Jawira\\Sanitizer\\Filters as Sanitizer; class Report { #[Sanitizer\\Pad(length: 10)] public string $category; } Parameters int length : Length of resulting string once pad is applied. string padString (optional): String to use as pad. The default value is \" space \" character. string side (optional): Use right to apply pad at the end of string, this is the default value. Use left to apply pad at the beginning of string. Use both to apply pad at the beginning and the end of string. Examples Add leading zeros when string has less than three characters: use Jawira\\Sanitizer\\Filters as Sanitizer; class Classroom { #[Sanitizer\\Pad(length: 3, padString: '0', side: 'left')] public string $number; } \"1\" \u2192 \"001\" \"50\" \u2192 \"050\" \"312\" \u2192 \"312\" Create 30 characters width ascii art header: use Jawira\\Sanitizer\\Filters as Sanitizer; class AsciiArt { #[Sanitizer\\Pad(length: 30, padString: '-+-', side: 'both')] public string $title; } \"CREDITS\" \u2192 \"-+--+--+--+CREDITS-+--+--+--+-\" \"DOCUMENTATION\" \u2192 \"-+--+--+DOCUMENTATION-+--+--+-\" \"AUTHOR\" \u2192 \"-+--+--+--+-AUTHOR-+--+--+--+-\" Right padding of 30 characters with asterisk symbol: use Jawira\\Sanitizer\\Filters as Sanitizer; class Paycheck { #[Sanitizer\\Pad(length: 30, padString: '*')] public string $writtenAmount; } \"four thousand\" \u2192 \"four thousand*****************\" \"one thousand five hundred\" \u2192 \"one thousand five hundred*****\" See also Trim - Strip whitespace (or other characters) from the beginning and end of a string.","title":"Pad"},{"location":"Strings/Pad.html#pad","text":"Pad - Pad a string to a certain length with another string. Pad only works with string , any other type is ignored.","title":"Pad"},{"location":"Strings/Pad.html#basic-usage","text":"use Jawira\\Sanitizer\\Filters as Sanitizer; class Report { #[Sanitizer\\Pad(length: 10)] public string $category; }","title":"Basic usage"},{"location":"Strings/Pad.html#parameters","text":"int length : Length of resulting string once pad is applied. string padString (optional): String to use as pad. The default value is \" space \" character. string side (optional): Use right to apply pad at the end of string, this is the default value. Use left to apply pad at the beginning of string. Use both to apply pad at the beginning and the end of string.","title":"Parameters"},{"location":"Strings/Pad.html#examples","text":"Add leading zeros when string has less than three characters: use Jawira\\Sanitizer\\Filters as Sanitizer; class Classroom { #[Sanitizer\\Pad(length: 3, padString: '0', side: 'left')] public string $number; } \"1\" \u2192 \"001\" \"50\" \u2192 \"050\" \"312\" \u2192 \"312\" Create 30 characters width ascii art header: use Jawira\\Sanitizer\\Filters as Sanitizer; class AsciiArt { #[Sanitizer\\Pad(length: 30, padString: '-+-', side: 'both')] public string $title; } \"CREDITS\" \u2192 \"-+--+--+--+CREDITS-+--+--+--+-\" \"DOCUMENTATION\" \u2192 \"-+--+--+DOCUMENTATION-+--+--+-\" \"AUTHOR\" \u2192 \"-+--+--+--+-AUTHOR-+--+--+--+-\" Right padding of 30 characters with asterisk symbol: use Jawira\\Sanitizer\\Filters as Sanitizer; class Paycheck { #[Sanitizer\\Pad(length: 30, padString: '*')] public string $writtenAmount; } \"four thousand\" \u2192 \"four thousand*****************\" \"one thousand five hundred\" \u2192 \"one thousand five hundred*****\"","title":"Examples"},{"location":"Strings/Pad.html#see-also","text":"Trim - Strip whitespace (or other characters) from the beginning and end of a string.","title":"See also"},{"location":"Strings/Trim.html","text":"Trim Trim - Strip whitespace (or other characters) from the beginning and end of a string. Trim only works with string , any other type is ignored. Basic usage use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Trim] public string $name; } Parameters string characters (optional): Set of characters you want to remove, default value is \" \\t\\n\\r\\0\\x0B \". string side (optional): Use both to apply trim at the beginning and the end of string, this is the default value. Use left to apply trim at the beginning of string. Use right to apply trim at the end of string. Examples Remove spaces from the beginning and end of string: use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Trim] public string $name; } \"Paul \" \u2192 \"Paul\" \" Paul \" \u2192 \"Paul\" \" Paul\" \u2192 \"Paul\" \"\\t\\tPaul\" \u2192 \"Paul\" \"Paul\\r\\n\" \u2192 \"Paul\" Remove spaces at the end of the string: use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Trim(side: 'right')] public string $name; } \"Paul \" \u2192 \"Paul\" \" Paul \" \u2192 \" Paul\" \" Paul\" \u2192 \" Paul\" \"\\t\\tPaul\" \u2192 \"\\t\\tPaul\" \"Paul\\r\\n\" \u2192 \"Paul\" Remove plus and minus signs at the beginning of the string: use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Trim(side: 'left', characters: '+-')] public string $name; } \" Paul \" \u2192 \" Paul \" \"-+-+Paul+-+-\" \u2192 \"Paul+-+-\" See also Pad - Pad a string to a certain length with another string.","title":"Trim"},{"location":"Strings/Trim.html#trim","text":"Trim - Strip whitespace (or other characters) from the beginning and end of a string. Trim only works with string , any other type is ignored.","title":"Trim"},{"location":"Strings/Trim.html#basic-usage","text":"use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Trim] public string $name; }","title":"Basic usage"},{"location":"Strings/Trim.html#parameters","text":"string characters (optional): Set of characters you want to remove, default value is \" \\t\\n\\r\\0\\x0B \". string side (optional): Use both to apply trim at the beginning and the end of string, this is the default value. Use left to apply trim at the beginning of string. Use right to apply trim at the end of string.","title":"Parameters"},{"location":"Strings/Trim.html#examples","text":"Remove spaces from the beginning and end of string: use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Trim] public string $name; } \"Paul \" \u2192 \"Paul\" \" Paul \" \u2192 \"Paul\" \" Paul\" \u2192 \"Paul\" \"\\t\\tPaul\" \u2192 \"Paul\" \"Paul\\r\\n\" \u2192 \"Paul\" Remove spaces at the end of the string: use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Trim(side: 'right')] public string $name; } \"Paul \" \u2192 \"Paul\" \" Paul \" \u2192 \" Paul\" \" Paul\" \u2192 \" Paul\" \"\\t\\tPaul\" \u2192 \"\\t\\tPaul\" \"Paul\\r\\n\" \u2192 \"Paul\" Remove plus and minus signs at the beginning of the string: use Jawira\\Sanitizer\\Filters as Sanitizer; class User { #[Sanitizer\\Trim(side: 'left', characters: '+-')] public string $name; } \" Paul \" \u2192 \" Paul \" \"-+-+Paul+-+-\" \u2192 \"Paul+-+-\"","title":"Examples"},{"location":"Strings/Trim.html#see-also","text":"Pad - Pad a string to a certain length with another string.","title":"See also"}]}